// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

// generator client {
//   provider = "prisma-client-js"
//   output   = "../src/generated/prisma"
// }

// datasource db {
//   provider = "postgresql"
//   url      = env("DATABASE_URL")
// }

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
  // previewFeatures = ["mongodb"]
}

model User {
  id         String          @id @default(auto()) @map("_id") @db.ObjectId
  name       String?
  email      String?
  logins     AuthProvider[]  // Đa phương thức đăng nhập
  sessions   ChatSession[]
  createdAt  DateTime        @default(now())
  updatedAt  DateTime        @updatedAt
}

model AuthProvider {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  userId       String   @db.ObjectId
  user         User     @relation(fields: [userId], references: [id])
  provider     String   // 'credentials' | 'google'
  providerId   String   // Với credentials là email, với google là sub
  passwordHash String?  // Chỉ dùng khi provider = 'credentials'
  createdAt    DateTime @default(now())

  @@unique([provider, providerId])
}

model ChatSession {
  id         String        @id @default(auto()) @map("_id") @db.ObjectId
  userId     String        @db.ObjectId
  user       User          @relation(fields: [userId], references: [id])
  title      String
  messages   ChatMessage[]
  createdAt  DateTime      @default(now())
  updatedAt  DateTime      @updatedAt
}

model ChatMessage {
  id            String       @id @default(auto()) @map("_id") @db.ObjectId
  sessionId     String       @db.ObjectId
  session       ChatSession  @relation(fields: [sessionId], references: [id])
  role          String       // 'user' | 'assistant'
  content       String
  createdAt     DateTime     @default(now())
}